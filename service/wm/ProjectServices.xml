<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">

    <service verb="get" noun="Projects">
        <in-parameters>
            <parameter name="partyId"/>
            <parameter name="roleTypeId"/>
            <parameter name="statusId"/>
            <parameter name="pageOffset" default-value="" type="Integer"/>
            <parameter name="pageLimit" default-value="" type="Integer"/>
            <parameter name="orderByField" default-value="-workEffortId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="projectList" type="List"/>
            <parameter name="count" type="Integer"/>
        </out-parameters>
        <actions>
            <!-- get record count to support pagination -->
            <entity-find-count entity-name="mantle.work.effort.WorkEffortAndParty" count-field="count" distinct="true">
                <econdition field-name="partyId" ignore-if-empty="true"/>
                <econdition field-name="roleTypeId" ignore-if-empty="true"/>
                <date-filter/>
                <econdition field-name="workEffortTypeEnumId" value="WetProject"/>
                <econdition field-name="statusId" operator="in" from="statusId" ignore-if-empty="true"/>
                <econditions combine="or">
                    <econditions><date-filter/><econdition field-name="partyId" from="ec.user.userAccount.partyId"/></econditions>
                    <econdition field-name="visibilityEnumId" operator="in" value="WevAllUsers"/>
                </econditions>
                <select-field field-name="workEffortId,workEffortName,statusId,estimatedCompletionDate"/>
            </entity-find-count>
            <!-- get list of projects -->
            <entity-find offset="pageOffset" limit="pageLimit" entity-name="mantle.work.effort.WorkEffortAndParty" list="weapList" distinct="true">
                <econdition field-name="partyId" ignore-if-empty="true"/>
                <econdition field-name="roleTypeId" ignore-if-empty="true"/>
                <date-filter/>
                <econdition field-name="workEffortTypeEnumId" value="WetProject"/>
                <econdition field-name="statusId" operator="in" from="statusId" ignore-if-empty="true"/>
                <econditions combine="or">
                    <econditions><date-filter/><econdition field-name="partyId" from="ec.user.userAccount.partyId"/></econditions>
                    <econdition field-name="visibilityEnumId" operator="in" value="WevAllUsers"/>
                </econditions>
                <select-field field-name="workEffortId,workEffortName,statusId,estimatedCompletionDate"/>
                <order-by field-name="${orderByField}"/>
            </entity-find>
            <set field="projectList" from="[]"/>
            <if condition="weapList">
                <iterate list="weapList" entry="weap">
                    <set field="project" from="new HashMap()"/>
                    <script>
                        project.putAll(weap)
                        projectList.add(project)
                    </script>
                    <!-- Get current assignee -->
                    <entity-find entity-name="mantle.work.effort.WorkEffortParty" list="managerList">
                        <econdition field-name="workEffortId" from="weap.workEffortId"/>
                        <econdition field-name="roleTypeId" value="Manager"/>
                        <date-filter/>
                    </entity-find>
                    <!-- It is technically possible to have more than one, so just use the first record -->
                    <if condition="managerList">
                        <set field="managerPartyId" from="managerList[0].partyId"/>
                        <script>
                            project.put("managerPartyId",managerPartyId)
                        </script>
                        <entity-find-one entity-name="mantle.party.PartyDetail" value-field="partyDetail">
                            <field-map field-name="partyId" from="managerPartyId"/>
                        </entity-find-one>
                        <if condition="partyDetail">
                            <set field="managerFirstName" from="partyDetail.firstName"/>
                            <set field="managerLastName" from="partyDetail.lastName"/>
                            <script>
                                project.put("managerFirstName",managerFirstName)
                                project.put("managerLastName",managerLastName)
                            </script>
                        </if>
                    </if>
                </iterate>
            </if>
        </actions>
    </service>
    <service verb="search" noun="Projects">
        <in-parameters>
            <parameter name="indexName" default-value="mantle"/>
            <parameter name="documentType" default-value="MantleProject"/>
            <parameter name="freeSearchText"/>
            <parameter name="partyId"/>
            <parameter name="roleTypeId"/>
            <parameter name="statusId"/>
            <parameter name="workEffortTypeEnumId" default-value="WetProject"/>
            <parameter name="pageOffset" default-value="" type="Integer"/>
            <parameter name="pageLimit" default-value="" type="Integer"/>
            <parameter name="orderByField" default-value="-workEffortId"/>
            <parameter name="pageNoLimit" type="Boolean" default="false"/>
        </in-parameters>
        <out-parameters>
            <parameter name="projectList" type="List"/>
            <parameter name="count" type="Integer"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="mantle.work.effort.WorkEffortAndParty" list="myProjectList">
                <date-filter/>
                <econdition field-name="workEffortTypeEnumId" value="WetProject"/>
                <econdition field-name="statusId" operator="in" from="statusId" ignore-if-empty="true"/>
                <econditions combine="or">
                    <econditions><date-filter/><econdition field-name="partyId" from="ec.user.userAccount.partyId"/></econditions>
                    <econdition field-name="visibilityEnumId" operator="in" value="WevAllUsers"/>
                </econditions>
                <select-field field-name="workEffortId,workEffortName,statusId,estimatedCompletionDate"/>
                <order-by field-name="${orderByField}"/>
            </entity-find>
            <set field="myProjectIds" from="myProjectList.workEffortId"/>
            <set field="queryString" from="''"/>
            <set field="nestedQueryMap" from="[:]"/>
            <set field="queryStringFinalORCondition" from="''"/>
            <set field="loggedInPartyId" from="ec.user.userAccount.partyId"/>
            <set field="nowTimeLong" from="System.currentTimeMillis()"/>
            <if condition="queryString"><set field="queryString" from="'(' + queryString + ')'"/></if>
            <if condition="myProjectIds">
                <iterate list="myProjectIds" entry="projectId">
                    <set field="queryStringProjectId" from="(queryStringProjectId ? queryStringProjectId + ' OR ' : '' ) + 'workEffortId:' + projectId"/>
                </iterate>
            </if>
            <if condition="queryStringProjectId">
                <set field="queryString" from="(queryString ? queryString + ' AND ' : '' ) + '(' + queryStringProjectId + ')'"/>
            </if>
            <if condition="workEffortTypeEnumId">
                <set field="queryString" from="(queryString ? queryString + ' AND ' : '' ) + 'workEffortTypeEnumId:' + workEffortTypeEnumId"/>
            </if>
            <if condition="statusId">
                <set field="queryStringStatus" from="''"/>
                <set field="statusList" from="statusId ? statusId.split(',') as List : []"/>
                <iterate list="statusList" entry="statusItem">
                    <set field="queryStringStatus" from="(queryStringStatus ? queryStringStatus + ' OR ' : '' ) + 'statusId:' + statusItem"/>
                </iterate>
                <if condition="queryStringStatus">
                    <set field="queryString" from="(queryString ? queryString + ' AND ' : '' ) + '(' + queryStringStatus + ')'"/>
                </if>
            </if>
            <if condition="partyId &amp;&amp; roleTypeId">
                <then>
                    <set field="nestedQueryMap.parties" from="[bool:[filter:[
                                [term:['parties.partyId':partyId]],
                                [match:['parties.role':roleTypeId]],
                            ], should:[
                                [range:['parties.thruDate':[gte:nowTimeLong]]],
                                [bool:[must_not:[exists:[field:'parties.thruDate']]]]
                            ], minimum_should_match:1]]"/>
                </then>
                <else-if condition="partyId">
                    <set field="nestedQueryMap.parties" from="[bool:[filter:[
                                [term:['parties.partyId':partyId]],
                            ], should:[
                                [range:['parties.thruDate':[gte:nowTimeLong]]],
                                [bool:[must_not:[exists:[field:'parties.thruDate']]]]
                            ], minimum_should_match:1]]"/>
                </else-if>
                <else-if condition="roleTypeId">
                    <set field="nestedQueryMap.parties" from="[bool:[filter:[
                                [match:['parties.role':roleTypeId]],
                            ], should:[
                                [range:['parties.thruDate':[gte:nowTimeLong]]],
                                [bool:[must_not:[exists:[field:'parties.thruDate']]]]
                            ], minimum_should_match:1]]"/>
                </else-if>
            </if>
            <if condition="freeSearchText">
                <set field="queryString" from="(queryString ? queryString + ' AND ' : '') + '(' + elasticQueryAutoWildcard('description:' + freeSearchText, true) + ' OR ' + elasticQueryAutoWildcard('name:' + freeSearchText, true) + ')'" />
            </if>
            <set field="orderByFields" from="orderByField ? [orderByField.replace('statusId', 'statusId.keyword').replace('workEffortName', 'name.keyword').replace('managerPartyId', 'parties.partyId')] : null"/>
            <service-call name="org.moqui.search.SearchServices.search#DataDocuments" out-map="projectresult"
                        in-map="[indexName:indexName, queryString:queryString, documentType:documentType, flattenDocument:false,
                             orderByFields:orderByFields,nestedQueryMap:nestedQueryMap, pageIndex:pageOffset, pageSize:pageLimit, pageNoLimit:pageNoLimit]"/>
            <set field="projectList" from="[]"/>
            <set field="count" from="projectresult.documentListCount"/>
            <if condition="projectresult.documentList">
                <iterate list="projectresult.documentList" entry="weap">
                    <set field="project" from="new HashMap()"/>
                    <script>
                        project.putAll(weap)
                        project.put("workEffortName" ,weap.name)
                        projectList.add(project)
                    </script>
                </iterate>
            </if>
        </actions>
    </service>
    <service verb="create" noun="Project">
        <in-parameters>
            <auto-parameters entity-name="mantle.work.effort.WorkEffort" include="nonpk"/>
            <parameter name="workEffortName" required="true"/>
            <parameter name="description" allow-html="safe"/>
            <parameter name="estimatedStartDate" type="Timestamp" format="yyyy-MM-dd"/>
            <parameter name="estimatedCompletionDate" type="Timestamp" format="yyyy-MM-dd"/>
            <parameter name="workEffortTypeEnumId" default-value="WetProject"/>
            <parameter name="statusId" default-value="WeInPlanning"/>
            <parameter name="assignToPartyId"/>
            <parameter name="assignRoleTypeId" default-value="Assignee"/>
            <parameter name="assignStatusId" default-value="WeptAssigned"/>
        </in-parameters>
        <out-parameters><parameter name="workEffortId"/></out-parameters>
        <actions>
            <if condition="estimatedStartDate != null &amp;&amp; estimatedCompletionDate != null &amp;&amp;
                           estimatedCompletionDate &lt; estimatedStartDate">
                <return error="true" message="Project date range is not valid."/>
            </if>
            <service-call name="create#mantle.work.effort.WorkEffort" out-map="context" in-map="context"/>
            <!-- always assign the user who creates the project as a manager -->
            <if condition="ec.user.userAccount?.partyId">
                <service-call name="create#mantle.work.effort.WorkEffortParty"
                              in-map="[workEffortId:workEffortId, partyId:ec.user.userAccount.partyId,
                            roleTypeId:'Manager', fromDate:ec.user.nowTimestamp, statusId:'WeptAssigned']"/>
            </if>
            <if condition="assignToPartyId">
                <service-call name="create#mantle.work.effort.WorkEffortParty" in-map="[workEffortId:workEffortId, partyId:assignToPartyId,
                        roleTypeId:assignRoleTypeId, fromDate:ec.user.nowTimestamp, statusId:assignStatusId]"/>
            </if>
        </actions>
    </service>
    <service verb="update" noun="Project">
        <in-parameters>
            <parameter name="workEffortId" required="true"/>
            <parameter name="workEffortName"/>
            <parameter name="estimatedCompletionDate"/>
            <parameter name="description" allow-html="safe"/>
            <parameter name="statusId"/>
            <!-- Parties -->
            <parameter name="managerPartyId"/>
        </in-parameters>
        <actions>
            <!-- Update Project -->
            <service-call name="update#mantle.work.effort.WorkEffort" out-map="context" in-map="context"/>
            <!-- Get current manager -->
            <entity-find entity-name="mantle.work.effort.WorkEffortParty" list="assignToList">
                <econdition field-name="workEffortId"/>
                <econdition field-name="roleTypeId" value="Manager"/>
                <date-filter/>
            </entity-find>
            <!-- It is technically possible to have more than one, so just use the first record -->
            <if condition="managerList">
                <set field="curManagerPartyId" from="managerList[0].partyId"/>
            </if>
            <!-- Update manager if current and new are different, if they are the same do nothing (user did not change manager) -->
            <if condition="managerPartyId &amp;&amp; curManagerPartyId != managerPartyId">
                <service-call name="mantle.work.WorkEffortServices.replace#WorkEffortParty"
                              in-map="[workEffortId:workEffortId, roleTypeId:'Manager', newPartyId:managerPartyId, statusId:'WeptAssigned']"/>
            </if>
        </actions>
    </service>
    <service verb="get" noun="Project">
        <in-parameters>
            <parameter name="workEffortId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="project" type="Map"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.work.effort.WorkEffort" value-field="workEffort"/>
            <set field="project" from="new HashMap()"/>
            <script>
                project.putAll(workEffort)
            </script>
            <!-- Get current assignee -->
            <entity-find entity-name="mantle.work.effort.WorkEffortParty" list="managerList">
                <econdition field-name="workEffortId"/>
                <econdition field-name="roleTypeId" value="Manager"/>
                <date-filter/>
            </entity-find>
            <!-- It is technically possible to have more than one, so just use the first record -->
            <if condition="managerList">
                <set field="managerPartyId" from="managerList[0].partyId"/>
                <script>
                    project.put("managerPartyId",managerPartyId)
                </script>
                <entity-find-one entity-name="mantle.party.PartyDetail" value-field="partyDetail">
                    <field-map field-name="partyId" from="managerPartyId"/>
                </entity-find-one>
                <if condition="partyDetail">
                    <set field="managerFirstName" from="partyDetail.firstName"/>
                    <set field="managerLastName" from="partyDetail.lastName"/>
                    <script>
                        project.put("managerFirstName",managerFirstName)
                        project.put("managerLastName",managerLastName)
                    </script>
                </if>
            </if>
        </actions>
    </service>
    <service verb="get" noun="Assignees"> <!-- for projects the role "assignee" is used to add people to a project -->
        <in-parameters>
            <parameter name="workEffortId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="assigneeList" type="List"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="mantle.work.effort.WorkEffortParty" list="asgnList">
                <econdition field-name="workEffortId"/>
                <econdition field-name="roleTypeId" value="Assignee"/>
                <date-filter/>
            </entity-find>
            <set field="assigneeList" from="[]"/>
            <if condition="asgnList">
                <iterate list="asgnList" entry="asgn">
                    <set field="assignee" from="new HashMap()"/>
                    <script>
                        assignee.putAll(asgn)
                        assigneeList.add(assignee)
                    </script>
                    <!-- Get current assignee -->
                    <entity-find-one entity-name="mantle.party.PartyDetail" value-field="partyDetail">
                        <field-map field-name="partyId" from="assignee.partyId"/>
                    </entity-find-one>
                    <if condition="partyDetail">
                        <set field="assignedUserFirstName" from="partyDetail.firstName"/>
                        <set field="assignedUserLastName" from="partyDetail.lastName"/>
                        <script>
                            assignee.put("assignedUserFirstName",assignedUserFirstName)
                            assignee.put("assignedUserLastName",assignedUserLastName)
                        </script>
                    </if>
                </iterate>
            </if>
        </actions>
    </service>
</services>
