<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->

<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">
    <!-- Wrapper service to update task and manage assignee and collaborators -->
    <service verb="get" noun="Tasks">
        <in-parameters>
            <!-- Use partyId and roleTypeId to find tasks by person, for example tasks assigned to a party or that a party is a collaborator on -->
            <parameter name="partyId"/>
            <parameter name="roleTypeId"/>
            <parameter name="statusId" default-value="WeInPlanning,WeApproved,WeInProgress"/>
            <parameter name="rootWorkEffortId"/>
            <parameter name="pageOffset" default-value="" type="Integer"/>
            <parameter name="pageLimit" default-value="" type="Integer"/>
            <parameter name="orderByField" default-value="-workEffortId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="taskList" type="List"/>
            <parameter name="count" type="Integer"/>
        </out-parameters>
        <actions>
            <!-- get list of user projects -->
            <entity-find entity-name="mantle.work.effort.WorkEffortAndParty" list="myProjectList">
                <econditions combine="or">
                    <econdition field-name="visibilityEnumId" operator="in" value="WevGeneral,WevAllUsers"/>
                    <econditions><date-filter/><econdition field-name="partyId" from="ec.user.userAccount.partyId"/></econditions>
                </econditions>
                <econdition field-name="workEffortTypeEnumId" value="WetProject"/>
                <order-by field-name="workEffortId"/>
            </entity-find>
            <set field="myProjectIds" from="myProjectList.workEffortId"/>
            <!-- get record count to support pagination -->
            <entity-find-count entity-name="mantle.work.effort.WorkEffortAndParty" count-field="count" distinct="true">
                <econdition field-name="partyId" ignore-if-empty="true"/>
                <econdition field-name="roleTypeId" ignore-if-empty="true"/>
                <date-filter/>
                <econdition field-name="rootWorkEffortId" ignore-if-empty="true"/>
                <econdition field-name="workEffortTypeEnumId" value="WetTask"/>
                <econdition field-name="statusId" operator="in" from="statusId"/>
                <econditions combine="or">
                    <econdition field-name="rootWorkEffortId" operator="in" from="myProjectIds"/>
                    <econditions><date-filter/><econdition field-name="partyId" from="ec.user.userAccount.partyId"/></econditions>
                    <econdition field-name="visibilityEnumId" operator="in" value="WevAllUsers"/>
                </econditions>
                <select-field field-name="rootWorkEffortId,workEffortId,workEffortName,statusId,estimatedCompletionDate"/>
            </entity-find-count>
            <!-- get list of tasks -->
            <entity-find offset="pageOffset" limit="pageLimit" entity-name="mantle.work.effort.WorkEffortAndParty" list="weapList" distinct="true">
                <econdition field-name="partyId" ignore-if-empty="true"/>
                <econdition field-name="roleTypeId" ignore-if-empty="true"/>
                <date-filter/>
                <econdition field-name="workEffortTypeEnumId" value="WetTask"/>
                <econdition field-name="statusId" operator="in" from="statusId"/>
                <econditions combine="or">
                    <econdition field-name="rootWorkEffortId" operator="in" from="myProjectIds"/>
                    <econditions><date-filter/><econdition field-name="partyId" from="ec.user.userAccount.partyId"/></econditions>
                    <econdition field-name="visibilityEnumId" operator="in" value="WevAllUsers"/>
                </econditions>
                <select-field field-name="rootWorkEffortId,workEffortId,workEffortName,statusId,estimatedCompletionDate"/>
                <order-by field-name="${orderByField}"/>
            </entity-find>
            <set field="taskList" from="[]"/>
            <if condition="weapList">
                <iterate list="weapList" entry="weap">
                    <set field="task" from="new HashMap()"/>
                    <script>
                        task.putAll(weap)
                        taskList.add(task)
                    </script>
                    <!-- Get current assignee -->
                    <entity-find entity-name="mantle.work.effort.WorkEffortParty" list="assignToList">
                        <econdition field-name="workEffortId" from="weap.workEffortId"/>
                        <econdition field-name="roleTypeId" value="Assignee"/>
                        <date-filter/>
                    </entity-find>
                    <!-- It is technically possible to have more than one, so just use the first record -->
                    <if condition="assignToList">
                        <set field="assignToPartyId" from="assignToList[0].partyId"/>
                        <script>
                            task.put("assignToPartyId",assignToPartyId)
                        </script>
                        <entity-find-one entity-name="mantle.party.PartyDetail" value-field="partyDetail">
                            <field-map field-name="partyId" from="assignToPartyId"/>
                        </entity-find-one>
                        <if condition="partyDetail">
                            <set field="assignedUserFirstName" from="partyDetail.firstName"/>
                            <set field="assignedUserLastName" from="partyDetail.lastName"/>
                            <script>
                                task.put("assignedUserFirstName",assignedUserFirstName)
                                task.put("assignedUserLastName",assignedUserLastName)
                            </script>
                        </if>
                    </if>
                </iterate>
            </if>
        </actions>
    </service>
    <service verb="get" noun="Task">
        <in-parameters>
            <parameter name="workEffortId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="task" type="Map"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.work.effort.WorkEffort" value-field="workEffort"/>
            <set field="task" from="new HashMap()"/>
            <script>
                task.putAll(workEffort)
            </script>
            <!-- Get current assignee -->
            <entity-find entity-name="mantle.work.effort.WorkEffortParty" list="assignToList">
                <econdition field-name="workEffortId"/>
                <econdition field-name="roleTypeId" value="Assignee"/>
                <date-filter/>
            </entity-find>
            <!-- It is technically possible to have more than one, so just use the first record -->
            <if condition="assignToList">
                <set field="assignToPartyId" from="assignToList[0].partyId"/>
                <script>
                    task.put("assignToPartyId",assignToPartyId)
                </script>
                <entity-find-one entity-name="mantle.party.PartyDetail" value-field="partyDetail">
                    <field-map field-name="partyId" from="assignToPartyId"/>
                </entity-find-one>
                <if condition="partyDetail">
                    <set field="assignedUserFirstName" from="partyDetail.firstName"/>
                    <set field="assignedUserLastName" from="partyDetail.lastName"/>
                    <script>
                        task.put("assignedUserFirstName",assignedUserFirstName)
                        task.put("assignedUserLastName",assignedUserLastName)
                    </script>
                </if>
            </if>
        </actions>
    </service>
    <service verb="get" noun="Users">
        <in-parameters>
            <parameter name="term" />
        </in-parameters>
        <out-parameters>
            <parameter name="userList" type="List"/>
        </out-parameters>
        <actions>
            <set field="term" from="term ?: ''"/>
            <entity-find entity-name="mantle.party.PersonWithUserAccount" list="userList">
                <econditions combine="or">
                    <econdition field-name="partyId" operator="like" value="%${term}%" ignore-case="true" ignore-if-empty="true" />
                    <econdition field-name="firstName" operator="like" value="%${term}%" ignore-case="true" ignore-if-empty="true"/>
                    <econdition field-name="lastName" operator="like" value="%${term}%" ignore-case="true" ignore-if-empty="true"/>
                    <econdition field-name="userFullName" operator="like" value="%${term}%" ignore-case="true" ignore-if-empty="true"/>
                </econditions>
                <select-field field-name="userId,userFullName,partyId,firstName,lastName"/>
            </entity-find>
        </actions>
    </service>
    <service verb="get" noun="Statuses">
        <out-parameters>
            <parameter name="statusList" type="List"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="moqui.basic.StatusItem" list="statusList">
                <econdition field-name="statusTypeId" value="WorkEffort"/>
                <select-field field-name="statusId,description"/>
                <order-by field-name="sequenceNum"/>
            </entity-find>
        </actions>
    </service>
    <service verb="create" noun="Task">
        <in-parameters>
            <parameter name="workEffortName"/>
            <parameter name="estimatedCompletionDate"/>
            <parameter name="description" allow-html="safe"/>
            <parameter name="purposeEnumId" default-value="WepTask"/>
            <parameter name="workEffortTypeEnumId" default-value="WetTask"/>
            <parameter name="statusId" default-value="WeInPlanning"/>
            <parameter name="rootWorkEffortId"/>
            <!-- Parties. Default assignee to user that creates the task if no one is specified. -->
            <parameter name="assignToPartyId" default="ec.user.userAccount.partyId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="workEffortId"/>
        </out-parameters>
        <actions>
            <!-- Create task -->
            <service-call name="create#mantle.work.effort.WorkEffort" out-map="context" in-map="context"/>
            <!-- Add assignee -->
            <if condition="assignToPartyId">
                <service-call name="mantle.work.WorkEffortServices.add#WorkEffortParty"
                              in-map="[workEffortId:workEffortId, roleTypeId:'Assignee', partyId:assignToPartyId, statusId:'WeptAssigned']"/>
            </if>
            <!-- If the current user is not the assignee, add them as a collaborator. Otherwise they will not be able to see the task after they create it.
              This is being set automatically by front end on initial creation. Leaving this code in case we decide to change in the future.
            <if condition="assignToPartyId != ec.user.userAccount.partyId">
                <service-call name="mantle.work.WorkEffortServices.add#WorkEffortParty"
                              in-map="[workEffortId:workEffortId, roleTypeId:'Collaborator', partyId:ec.user.userAccount.partyId]"/>
            </if>
            -->
            <!-- Add to project, if specified. It is done this way so the task gets a workEffortId before assigning it to a project. Otherwise the project ID gets prepended and scres up sorting.-->
            <if condition="rootWorkEffortId">
                <service-call name="update#mantle.work.effort.WorkEffort" in-map="[workEffortId:workEffortId,rootWorkEffortId:rootWorkEffortId]"/>
            </if>
        </actions>
    </service>
    <service verb="update" noun="Task">
        <in-parameters>
            <parameter name="workEffortId" required="true"/>
            <parameter name="rootWorkEffortId"/>
            <parameter name="workEffortName"/>
            <parameter name="estimatedCompletionDate"/>
            <parameter name="description" allow-html="safe"/>
            <parameter name="statusId"/>
            <!-- Parties -->
            <parameter name="assignToPartyId"/>
        </in-parameters>
        <actions>
            <!-- Update task -->
            <service-call name="update#mantle.work.effort.WorkEffort" out-map="context" in-map="context"/>
            <!-- Get current assignee -->
            <entity-find entity-name="mantle.work.effort.WorkEffortParty" list="assignToList">
                <econdition field-name="workEffortId"/>
                <econdition field-name="roleTypeId" value="Assignee"/>
                <date-filter/>
            </entity-find>
            <!-- It is technically possible to have more than one, so just use the first record -->
            <if condition="assignToList">
                <set field="curAssignToPartyId" from="assignToList[0].partyId"/>
            </if>
            <!-- If no assignee then unassign from current assignee (user cleared assignee field) -->
            <if condition="!assignToPartyId &amp;&amp; curAssignToPartyId">
                <service-call name="mantle.work.WorkEffortServices.remove#WorkEffortParty"
                              in-map="[workEffortId:workEffortId, roleTypeId:'Assignee', partyId:curAssignToPartyId]"/>
            </if>
            <!-- Update assignee if current and new are different and add current assignee as a collaborator. If they are the same do nothing (user did not change assignee) -->
            <if condition="assignToPartyId &amp;&amp; curAssignToPartyId != assignToPartyId">
                <service-call name="mantle.work.WorkEffortServices.replace#WorkEffortParty"
                              in-map="[workEffortId:workEffortId, roleTypeId:'Assignee', newPartyId:assignToPartyId, statusId:'WeptAssigned']"/>
                <if condition="curAssignToPartyId"> <!-- make sure there is a current assignee before adding as collaborator -->
                    <service-call name="mantle.work.WorkEffortServices.add#WorkEffortParty"
                                  in-map="[workEffortId:workEffortId, roleTypeId:'Collaborator', partyId:curAssignToPartyId, statusId:'WeptAssigned']"/>
                </if>
            </if>
        </actions>
    </service>
    <service verb="get" noun="Collaborators">
        <in-parameters>
            <parameter name="workEffortId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="collaboratorList" type="List"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="mantle.work.effort.WorkEffortParty" list="collabList">
                <econdition field-name="workEffortId"/>
                <econdition field-name="roleTypeId" value="Collaborator"/>
                <date-filter/>
            </entity-find>
            <set field="collaboratorList" from="[]"/>
            <if condition="collabList">
                <iterate list="collabList" entry="collab">
                    <set field="collaborator" from="new HashMap()"/>
                    <script>
                        collaborator.putAll(collab)
                        collaboratorList.add(collaborator)
                    </script>
                    <!-- Get current assignee -->
                    <entity-find-one entity-name="mantle.party.PartyDetail" value-field="partyDetail">
                        <field-map field-name="partyId" from="collab.partyId"/>
                    </entity-find-one>
                    <if condition="partyDetail">
                        <set field="assignedUserFirstName" from="partyDetail.firstName"/>
                        <set field="assignedUserLastName" from="partyDetail.lastName"/>
                        <script>
                            collaborator.put("assignedUserFirstName",assignedUserFirstName)
                            collaborator.put("assignedUserLastName",assignedUserLastName)
                        </script>
                    </if>
                </iterate>
            </if>
        </actions>
    </service>
    <service verb="get" noun="Comments">
        <in-parameters>
            <parameter name="workEffortId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="commentList"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="mantle.work.effort.WorkEffortCommEventDetail" list="cmtList">
                <econdition field-name="workEffortId"/><order-by field-name="entryDate"/>
            </entity-find>
            <set field="commentList" from="[]"/>
            <if condition="cmtList">
                <iterate list="cmtList" entry="cmt">
                    <set field="comment" from="new HashMap()"/>
                    <script>
                        comment.putAll(cmt)
                        commentList.add(comment)
                    </script>
                    <!-- Get current assignee -->
                    <entity-find-one entity-name="mantle.party.PartyDetail" value-field="partyDetail">
                        <field-map field-name="partyId" from="cmt.fromPartyId"/>
                    </entity-find-one>
                    <if condition="partyDetail">
                        <set field="assignedUserFirstName" from="partyDetail.firstName"/>
                        <set field="assignedUserLastName" from="partyDetail.lastName"/>
                        <script>
                            comment.put("assignedUserFirstName",assignedUserFirstName)
                            comment.put("assignedUserLastName",assignedUserLastName)
                        </script>
                    </if>
                </iterate>
            </if>
        </actions>
    </service>
    <service verb="add" noun="Comment">
        <in-parameters>
            <parameter name="workEffortId" required="true"/>
            <parameter name="subject"/>
            <parameter name="body" allow-html="safe"/>
            <parameter name="contentType" default-value="text/plain"/>
        </in-parameters>
        <actions>
            <service-call name="create#mantle.party.communication.CommunicationEvent" out-map="context"
                          in-map="[communicationEventTypeId:'Comment', contactMechTypeEnumId:'CmtWebForm', statusId:'CeSent',
                        fromPartyId:ec.user.userAccount.partyId, entryDate:ec.user.nowTimestamp,
                        contentType:contentType, subject:subject, body:body]"/>
            <service-call name="create#mantle.work.effort.WorkEffortCommEvent"
                          in-map="[workEffortId:workEffortId, communicationEventId:communicationEventId]"/>
        </actions>
    </service>
    <service verb="update" noun="Comment">
        <in-parameters>
            <parameter name="workEffortId" required="true"/>
            <parameter name="communicationEventId" required="true"/>
            <parameter name="subject"/>
            <parameter name="body" allow-html="safe"/>
            <parameter name="contentType" default-value="text/plain"/>
        </in-parameters>
        <actions>
            <service-call name="update#mantle.party.communication.CommunicationEvent" out-map="context"
                          in-map="[communicationEventId:communicationEventId, fromPartyId:ec.user.userAccount.partyId,
                        contentType:contentType, subject:subject, body:body]"/>
        </actions>
    </service>
    <service verb="delete" noun="Comment">
        <in-parameters>
            <parameter name="workEffortId" required="true"/>
            <parameter name="communicationEventId" required="true"/>
        </in-parameters>
        <actions>
            <service-call name="delete#mantle.work.effort.WorkEffortCommEvent"
                          in-map="[workEffortId:workEffortId, communicationEventId:communicationEventId]"/>
            <service-call name="delete#mantle.party.communication.CommunicationEvent"
                          in-map="communicationEventId:communicationEventId"/>
        </actions>
    </service>
    <service verb="get" noun="MyUserAccount" authenticate="anonymous-view">
        <out-parameters>
            <parameter name="loggedInUser"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="moqui.security.UserAccount" value-field="loggedInUser">
                <field-map field-name="userId" from="ec.user.userId"/></entity-find-one>
        </actions>
    </service>
</services>
