<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->

<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">
    <service verb="get" noun="WikiPageHistory">
        <in-parameters>
            <parameter name="wikiPageId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="wphList" type="List"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="moqui.resource.wiki.WikiPageHistory" list="wphListTmp">
            <econdition field-name="wikiPageId"/><order-by field-name="-changeDateTime"/></entity-find>

            <set field="wphList" from="[]"/>
            <if condition="wphListTmp">
                <iterate list="wphListTmp" entry="wph">
                    <set field="history" from="new HashMap()"/>
                    <script>
                        history.putAll(wph)
                        wphList.add(history)
                    </script>
                    <entity-find-one entity-name="mantle.party.PersonAndUserAccount" value-field="paua">
                        <field-map field-name="userId" from="wph.userId"/>
                    </entity-find-one>
                    <if condition="paua">
                        <script>
                            history.put("first_name",paua.firstName)
                            history.put("last_name",paua.lastName)
                            history.put("username",paua.username)
                        </script>
                    </if>
                </iterate>
            </if>
        </actions>
    </service>
    <service verb="get" noun="WikiCompare">
        <in-parameters>
            <parameter name="wikiSpaceId" required="true"/>
            <parameter name="pagePath"/>
            <parameter name="versionNameLhs" required="true"/>
            <parameter name="versionNameRhs" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="pageTextLhs" />
            <parameter name="pageTextRhs" />
            <parameter name="wikiType" />
        </out-parameters>
        <actions>
            <service-call name="org.moqui.impl.WikiServices.get#WikiPageInfo" in-map="context" out-map="context"/>
            <set field="pageTextLhs" from="pageReference?.getText(versionNameLhs) ?: ''"/>
            <set field="pageTextRhs" from="pageReference?.getText(versionNameRhs) ?: ''"/>
            <set field="wikiType" from="wikiType ?: 'md'"/>
        </actions>
    </service>
    <service verb="get" noun="WikiPageCommEventDetail">
        <in-parameters>
            <parameter name="wikiPageId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="commentList"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="mantle.party.communication.WikiPageCommEventDetail" list="commEventDetailList">
                <econdition field-name="wikiPageId"/><order-by field-name="entryDate"/></entity-find>
            <set field="commentList" from="[]"/>
            <if condition="commEventDetailList">
                <iterate list="commEventDetailList" entry="cmt">
                    <set field="comment" from="new HashMap()"/>
                    <script>
                        comment.putAll(cmt)
                        commentList.add(comment)
                    </script>
                    <!-- Get current assignee -->
                    <entity-find-one entity-name="mantle.party.PartyDetail" value-field="partyDetail">
                        <field-map field-name="partyId" from="cmt.fromPartyId"/>
                    </entity-find-one>
                    <if condition="partyDetail">
                        <set field="assignedUserFirstName" from="partyDetail.firstName"/>
                        <set field="assignedUserLastName" from="partyDetail.lastName"/>
                        <script>
                            comment.put("assignedUserFirstName",assignedUserFirstName)
                            comment.put("assignedUserLastName",assignedUserLastName)
                        </script>
                    </if>
                </iterate>
            </if>
        </actions>
    </service>
    <service verb="update" noun="WikiPageComment">
        <in-parameters>
            <parameter name="wikiPageId" required="true"/>
            <parameter name="communicationEventId" required="true"/>
            <parameter name="subject"/>
            <parameter name="body"/>
            <parameter name="contentType" default-value="text/plain"/>
        </in-parameters>
        <actions>
            <service-call name="update#mantle.party.communication.CommunicationEvent" out-map="context"
                          in-map="[communicationEventId:communicationEventId, fromPartyId:ec.user.userAccount.partyId,
                        contentType:contentType, subject:subject, body:body]"/>
        </actions>
    </service>
    <service verb="delete" noun="Comment">
        <in-parameters>
            <parameter name="wikiPageId" required="true"/>
            <parameter name="communicationEventId" required="true"/>
        </in-parameters>
        <actions>
            <service-call name="delete#mantle.party.communication.WikiPageCommunicationEvent"
                          in-map="[wikiPageId:wikiPageId, communicationEventId:communicationEventId]"/>
            <service-call name="delete#mantle.party.communication.CommunicationEvent"
                          in-map="communicationEventId:communicationEventId"/>
        </actions>
    </service>
    <service verb="get" noun="getAllWikiSpacePages">
        <in-parameters>
            <parameter name="wikiSpaceId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="pagesList"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="moqui.resource.wiki.WikiPage" list="pagesList">
                <econdition field-name="wikiSpaceId"/></entity-find>
        </actions>
    </service>
    <service verb="get" noun="WikiPageChildren">
        <implements service="org.moqui.impl.WikiServices.get#WikiPageReference"/>
        <out-parameters>
            <parameter name="childPageInfoList" type="List"><parameter name="childPageInfo" type="Map"/></parameter>
        </out-parameters>
        <actions>
            <service-call name="org.moqui.impl.WikiServices.get#WikiPageReference" in-map="context" out-map="context"/>
            <if condition="pageReference == null"><return/></if>

            <set field="childPageRefList" from="pageReference.getChildren()"/>
            <set field="childPageInfoList" from="[]"/>
            <iterate list="childPageRefList" entry="childPageRef">
                <set field="children" from="childPageRef.getChildren()"/>
                <set field="childFilename" from="childPageRef.getFileName()"/>
                <set field="childDotIdx" from="childFilename.lastIndexOf('.')"/>
                <set field="childPageName" from="childDotIdx &gt; 0 ? childFilename.substring(0, childDotIdx) : childFilename"/>
                <set field="childPagePath" from="(pagePath ? pagePath + '/' : '') + childPageName"/>
                <!-- <log level="warn" message="wikiSpaceId ${wikiSpaceId} childPagePath '${childPagePath}' childFilename '${childFilename}' pagePath '${pagePath}'"/> -->

                <set field="sequenceNum" from="50"/>
                <service-call name="org.moqui.impl.WikiServices.get#WikiPageId" out-map="pageIdOut" out-map-add-to-existing="false"
                        in-map="[wikiSpaceId:wikiSpaceId, pagePath:childPagePath]"/>
                <if condition="pageIdOut.wikiPage != null">
                    <set field="sequenceNum" from="pageIdOut.wikiPage.sequenceNum ?: 50"/></if>
                <if condition="children">
                    <then>
                    <script>childPageInfoList.add([filename:childFilename,lazy:true, pagePath:childPagePath, pageName:childPageName, sequenceNum:sequenceNum])</script>
                    </then>
                    <else>
                        <script>childPageInfoList.add([filename:childFilename, pagePath:childPagePath, pageName:childPageName, sequenceNum:sequenceNum])</script>
                    </else>
                </if>

            </iterate>

            <order-map-list list="childPageInfoList"><order-by field-name="sequenceNum"/><order-by field-name="childPageName"/></order-map-list>
        </actions>
    </service>
    <service verb="get" noun="getAllBlogsForWikiSpace">
        <in-parameters>
            <parameter name="wikiSpaceId" required="true"/>
            <parameter name="title" />
            <parameter name="author" />
            <parameter name="wikiPageCategoryId" />
            <parameter name="publishStartDate" />
            <parameter name="publishEndDate" />
            <parameter name="orderByField" default-value="-publishDate"/>
        </in-parameters>
        <out-parameters>
            <parameter name="blogsList"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="moqui.resource.wiki.WikiBlogFindView" list="blogsListTmp">
                <econdition field-name="wikiSpaceId" ignore-if-empty="true"/>
                <econdition field-name="title" ignore-if-empty="true"/>
                <econdition field-name="author" ignore-if-empty="true"/>
                <econdition field-name="wikiPageCategoryId" ignore-if-empty="true"/>
                <econdition field-name="publishDate" operator="greater-equals" from="publishStartDate" ignore-if-empty="true"/>
                <econdition field-name="publishDate" operator="less-equals" from="publishEndDate" ignore-if-empty="true"/>
                <order-by field-name="${orderByField}"/>
                <select-field field-name="wikiSpaceId,wikiBlogId,wikiPageId,pagePath,summary,title,author,publishDate,smallImageLocation"/>
            </entity-find>
            <set field="blogsList" from="[]"/>
            <if condition="blogsListTmp">
                <iterate list="blogsListTmp" entry="blg">
                    <set field="blog" from="new HashMap()"/>
                    <script>
                        blog.putAll(blg)
                        blogsList.add(blog)
                    </script>
                    <!-- Get current assignee -->
                    <entity-find entity-name="moqui.resource.wiki.WikiBlogCategoryDetail" list="categoryList">
                        <econdition field-name="wikiBlogId" from="blg.wikiBlogId" />
                    </entity-find>
                    <if condition="categoryList">
                        <set field="categoryList" from="categoryList"/>
                        <script>
                            blog.put("category_list",categoryList)
                        </script>
                    </if>
                </iterate>
            </if>
        </actions>
    </service>
    <service verb="get" noun="getAllWikiSpaces">
        <out-parameters>
            <parameter name="spaceList"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="moqui.resource.wiki.WikiSpace" list="spaceList">
                <order-by field-name="wikiSpaceId"/>
            </entity-find>
        </actions>
    </service>
    <service verb="get" noun="getImage">
        <in-parameters>
            <parameter name="wikiBlogId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="moqui.resource.wiki.WikiBlog" value-field="wikiBlog">
                <econdition field-name="wikiBlogId"/>
            </entity-find-one>
            <script>ec.web.sendResourceResponse(wikiBlog?.smallImageLocation)</script>
        </actions>
    </service>
    <service verb="get" noun="getAllCategories">
        <out-parameters>
            <parameter name="categoryList"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="moqui.resource.wiki.WikiPageCategory" list="categoryList">
                        <order-by field-name="categoryName"/></entity-find>
        </actions>
    </service>
    <service verb="get" noun="getAllAuthors">
        <out-parameters>
            <parameter name="authorList"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="moqui.resource.wiki.WikiBlog" list="authorList" distinct="true">
                            <select-field field-name="author"/></entity-find>
        </actions>
    </service>
    <service verb="update" noun="wikiSpace">
        <in-parameters>
            <parameter name="wikiSpaceId" required="true"/>
            <parameter name="description"/>
            <parameter name="rootPageLocation"/>
            <parameter name="publicPageUrl"/>
            <parameter name="publicAttachmentUrl"/>
            <parameter name="restrictView"/>
            <parameter name="restrictUpdate"/>
            <parameter name="allowAnyHtml"/>
        </in-parameters>
        <actions>
            <service-call name="update#moqui.resource.wiki.WikiSpace" out-map="context"
                          in-map="[wikiSpaceId:wikiSpaceId, description:description,
                        rootPageLocation:rootPageLocation, publicPageUrl:publicPageUrl, publicAttachmentUrl:publicAttachmentUrl,
                        restrictView:restrictView, restrictUpdate:restrictUpdate, allowAnyHtml:allowAnyHtml]"/>
        </actions>
    </service>
</services>
